# ===================================================================
# COMMON SPRING BOOT PROPERTIES
# ===================================================================
#
# LOGGING
#
# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
logging.config=classpath:logback-test.xml
# Conversion word used when logging exceptions.
logging.exception-conversion-word=%wEx
# Log file name. For instance `myapp.log`
logging.file=admin.log
# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
logging.level.org.springframework=INFO
# Location of the log file. For instance `/var/log`
#logging.path=
# Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.console=
# Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.file=
# Appender pattern for log level (default %5p). Only supported with the default logback setup.
#logging.pattern.level=
#
# ---------------------------------------------------------
# AUTO-CONFIGURATION
# ---------------------------------------------------------
#
# Auto-configuration classes to exclude.
spring.autoconfigure.exclude=
#
# ---------------------------------------------------------
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
# ---------------------------------------------------------
#
# Network address to which the server should bind to.
server.address=
# If response compression is enabled.
server.compression.enabled=false
# List of user-agents to exclude from compression.
server.compression.excluded-user-agents=
# Comma-separated list of MIME types that should be compressed.
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
# Minimum response size that is required for compression to be performed.
server.compression.min-response-size=2048
# Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector's container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.
server.connection-timeout=
# Servlet context init parameters. For instance `server.context-parameters.a=alpha`
#server.context-parameters.*=
# Context path of the application.
server.context-path=
# Display name of the application.
server.display-name=AppAdmin
# Maximum size in bytes of the HTTP message header.
server.max-http-header-size=0
# When to include a "stacktrace" attribute.
server.error.include-stacktrace=never
# Path of the error controller.
server.error.path=/error
# Enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=true
# Number of acceptor threads to use.
server.jetty.acceptors=
# Maximum size in bytes of the HTTP post or put content.
server.jetty.max-http-post-size=0
# Number of selector threads to use.
server.jetty.selectors=
# The class name of the JSP servlet.
#server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet
# Init parameters used to configure the JSP servlet
#server.jsp-servlet.init-parameters.*=
# Whether or not the JSP servlet is registered
#server.jsp-servlet.registered=true
# Server HTTP port.
server.port=8080
# Value to use for the Server response header (no header is sent if empty)
server.server-header=
# Path of the main dispatcher servlet.
server.servlet-path=/
# If X-Forwarded-* headers should be applied to the HttpRequest.
server.use-forward-headers=
# Comment for the session cookie.
server.session.cookie.comment=
# Domain for the session cookie.
server.session.cookie.domain=
# "HttpOnly" flag for the session cookie.
server.session.cookie.http-only=
# Maximum age of the session cookie in seconds.
server.session.cookie.max-age=
# Session cookie name.
server.session.cookie.name=
# Path of the session cookie.
server.session.cookie.path=
# "Secure" flag for the session cookie.
server.session.cookie.secure=
# Persist session data between restarts.
server.session.persistent=false
# Directory used to store session data.
server.session.store-dir=
# Session timeout in seconds.
server.session.timeout=
# Session tracking modes (one or more of the following: "cookie", "url", "ssl").
server.session.tracking-modes=
#
# --------------------------------------------------------
# H2 Web Console (H2ConsoleProperties)
# --------------------------------------------------------
#
# Enable the console.
spring.h2.console.enabled=false
# Path at which the console will be available.
spring.h2.console.path=/h2-console
# Enable trace output.
spring.h2.console.settings.trace=false
# Enable remote access.
spring.h2.console.settings.web-allow-others=false
#
# ---------------------------------------------------------
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# ---------------------------------------------------------
#
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=org.h2.Driver
# JDBC url of the database.
spring.datasource.url=jdbc:h2:mem:admin
# Login user of the database.
spring.datasource.username=sa
# Login password of the database.
spring.datasource.password=
# Populate the database using 'data.sql'.
spring.datasource.initialize=false
# Statement separator in SQL initialization scripts.
#spring.datasource.separator=sql/schema-postgresql.sql;test-data.sql
# SQL scripts encoding.
spring.datasource.sql-script-encoding=UTF-8
#
# ---------------------------------------------------------
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
# ---------------------------------------------------------
# Enable JPA repositories.
spring.data.jpa.repositories.enabled=true
# Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
spring.jpa.database=H2
# Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
spring.jpa.database-platform=POSTGRESQL
# Initialize the schema on startup.
spring.jpa.generate-ddl=false
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
spring.jpa.open-in-view=true
# Additional native properties to set on the JPA provider. spring.jpa.properties.*
spring.jpa.properties.eclipselink.weaving=static
spring.jpa.properties.eclipselink.logging.level.sql=FINE
# Enable logging of SQL statements.
spring.jpa.show-sql=true